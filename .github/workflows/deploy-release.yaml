name: Deploy Release Demo

on:
  release:
    types: [published]
  workflow_dispatch:
   inputs:
      tag:
        description: 'Version to deploy'
        required: true
        type: string
      wordpress_version:
        description: 'WordPress version'
        required: false
        type: string
        default: '6.8.1'
      php_version:
        description: 'PHP version'
        required: false
        type: string
        default: '8.4'
      wp_cli_version:
        description: 'WP-CLI version'
        required: false
        type: string
        default: '2.12.0'
      woocommerce_version:
        description: 'WooCommerce version'
        required: false
        type: string
        default: '9.9.5'

permissions:
  contents: read

env:
  # Default versions for release deployments
  WORDPRESS_VERSION: "6.8.1"
  PHP_VERSION: "8.4"
  WP_CLI_VERSION: "2.12.0"
  WOOCOMMERCE_VERSION: "9.9.5"

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: release-demo
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && inputs.tag || github.event.release.tag_name }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          file: ./tests/Dockerfile
          tags: ${{ secrets.ECR_URL }}:${{ github.event_name == 'workflow_dispatch' && inputs.tag || github.event.release.tag_name }}
          build-args: |
            WORDPRESS_VERSION=${{ github.event_name == 'workflow_dispatch' && inputs.wordpress_version || env.WORDPRESS_VERSION }}
            PHP_VERSION=${{ github.event_name == 'workflow_dispatch' && inputs.php_version || env.PHP_VERSION }}
            WP_CLI_VERSION=${{ github.event_name == 'workflow_dispatch' && inputs.wp_cli_version || env.WP_CLI_VERSION }}
            WOOCOMMERCE_VERSION=${{ github.event_name == 'workflow_dispatch' && inputs.woocommerce_version || env.WOOCOMMERCE_VERSION }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/deployments-wordpress
            mkdir -p demo
            cd demo
            cat > .env <<EOF
            ECR_REPO_URI=${{ secrets.ECR_URL }}
            IMAGE_TAG=${{ github.event_name == 'workflow_dispatch' && inputs.tag || github.event.release.tag_name }}
            VIRTUAL_HOST=demo.wordpress.sokin.com
            ADMIN_USER=admin
            ADMIN_PASS=${{ secrets.ADMIN_PASS }}
            SOKIN_REDIRECT_URL=${{ secrets.SOKIN_REDIRECT_URL }}
            SOKIN_X_API_KEY=${{ secrets.SOKIN_X_API_KEY }}
            SOKIN_API_URL=${{ secrets.SOKIN_API_URL }}
            NETWORK=demo
            EOF
            cp ~/deployments-wordpress/docker-compose.yml .
            docker-compose down || true && docker-compose pull && docker-compose up -d --force-recreate 
